#include <ESP8266WiFi.h>
//*-- Hardware Serial
#define Baudrate   115200

// Initialize TNumber

int TNumber, TNumber2;

//*-- IoT Information
#define SSID    "Tranquility"
#define PASS    "11111112"
#define HOST    "api.thingspeak.com" // ThingSpeak IP Address: 184.106.153.149
#define PORT    80
// 使用 GET 傳送資料的格式
// GET /update?key=[THINGSPEAK_KEY]&field1=[data 1]&filed2=[data 2]...;
String GET = "GET /update?key=8E5TVB15TQO5604B";

void setup() {
    Serial.begin( Baudrate );
    Serial.println( "ESP8266 Ready!" );
    // Connecting to a WiFi network
    Serial.print("Connect to ");
    Serial.println( SSID );
    WiFi.begin( SSID, PASS );

    // 持續等待並連接到指定的 WiFi SSID
    while( WiFi.status() != WL_CONNECTED )
    {
        delay(500);
        Serial.print( "." );
    }
    Serial.println( "" );

    Serial.println( "WiFi connected" );
    Serial.println( "IP address: " );
    Serial.println( WiFi.localIP() );
    Serial.println( "" );

    Serial.println( "Tranquility System Ready!" );
    delay(2000);
}

void loop() {
	//Just number to test
	TNumber = 3;

    // 確認取回的溫溼度數據可用
    if( isnan( TNumber ) || isnan( TNumber2 ) )
    {
        Serial.println( "Failed to Get Data" );
    return;
    }
    else
    {    
        Serial.print( "TNumber: " );
        Serial.print( TNumber );
		updateT();
    }

    // 每隔多久傳送一次資料
    delay( 2000 ); // 20 second
}

void updateT()
{
    // 設定 ESP8266 作為 Client 端
    WiFiClient client;
    if( !client.connect(HOST, PORT ) )
    {
        Serial.println( "connection failed" );
        return;
    }
    else
    {
        // 準備上傳到 ThingSpeak IoT Server 的資料
        // 已經預先設定好 ThingSpeak IoT Channel 的欄位
        // field1：溫度；field2：濕度
        String getStr = GET + "&field1=" + TNumber +"\r\n" ;
        client.print( getStr );
        client.print( "Host: api.thingspeak.com\n" );
        client.print( "Connection: close\r\n\r\n" );
        
        delay(10);
        //
        // 處理遠端伺服器回傳的訊息，程式碼可以寫在這裡！
        //
        client.stop();
    }
}
